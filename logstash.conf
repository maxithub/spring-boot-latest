input {
  beats {
    port => 5044
  }
}
 
filter {
   # grok {
   #    pattern_definitions => {
   #       "JAVACLASSSHORT" => "(?:[\.]?[a-zA-Z0-9-]+\.)*[A-Za-z0-9$]+"
   #    }
   #    # Do multiline matching with (?m) as the above mutliline filter may add newlines to the log messages.
   #    match => [ "message", "(?m)^%{TIMESTAMP_ISO8601:logtime}%{SPACE}%{LOGLEVEL:loglevel} %{SPACE}%{NUMBER:pid}%{SPACE}\[%{SYSLOG5424SD:threadname}\]%{SPACE}---%{SPACE}%{JAVACLASSSHORT:classname}%{SPACE}:%{SPACE}%{GREEDYDATA:logmessage}" ]
   # }

   grok {
      # pattern_definitions => {
      #    "JAVA_LOG_LEVEL" => "(DEBUG|INFO|WARN|ERROR|FATAL|TRACE)"
      # }
      match => [ "message",
               "(?m)(?<timestamp>%{YEAR}-%{MONTHNUM}-%{MONTHDAY} %{TIME})\s+%{LOGLEVEL:level} %{NUMBER:pid} --- \[(?<thread>[A-Za-z0-9-]+)\] [A-Za-z0-9.]*\.(?<class>[A-Za-z0-9#_]+)\s*:\s+%{GREEDYDATA:logmessage}"
               # "message",
               # "(?m)(?<timestamp>%{YEAR}-%{MONTHNUM}-%{MONTHDAY} %{TIME})  %{LOGLEVEL:level} %{NUMBER:pid} --- .+? :\s+%{GREEDYDATA:logmessage}"
             ]
      remove_field => [ "messgae" ]
   }
      
   date {
      match => [ "timestamp" , "yyyy-MM-dd HH:mm:ss.SSS" ]
   }
}

output {
   # elasticsearch { host => "localhost" }
   stdout { codec => json }
}
